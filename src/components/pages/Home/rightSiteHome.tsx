import React from "react";
import { Link } from "react-router-dom";

// Categories array with unique `to` links
const categories = [
    { name: "‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶® ‡¶á‡¶®‡¶ï‡¶æ‡¶Æ", count: 10, to: "/‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶® ‡¶á‡¶®‡¶ï‡¶æ‡¶Æ" },
    { name: "‡¶á-‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡¶æ", count: 16, to: "/‡¶á-‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡¶æ" },
    { name: "‡¶è‡¶∏‡¶á‡¶ì", count: 22, to: "/‡¶è‡¶∏‡¶á‡¶ì" },
    { name: "‡¶ì‡¶Ø‡¶º‡ßá‡¶¨‡¶∏‡¶æ‡¶á‡¶ü ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶®", count: 7, to: "/‡¶ì‡ßü‡ßá‡¶¨‡¶∏‡¶æ‡¶á‡¶ü ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶®" },
    { name: "‡¶ó‡ßç‡¶∞‡¶æ‡¶´‡¶ø‡¶ï‡ßç‡¶∏ ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶®", count: 2, to: "/‡¶ó‡ßç‡¶∞‡¶æ‡¶´‡¶ø‡¶ï‡ßç‡¶∏ ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶®" },
    { name: "‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶Æ‡¶æ‡¶∞‡ßç‡¶ï‡ßá‡¶ü‡¶ø‡¶Ç", count: 19, to: "/‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶Æ‡¶æ‡¶∞‡ßç‡¶ï‡ßá‡¶ü‡¶ø‡¶Ç" },
    { name: "‡¶¨‡ßç‡¶≤‡¶ó‡¶ø‡¶Ç", count: 21, to: "/‡¶¨‡ßç‡¶≤‡¶ó‡¶ø‡¶Ç" },
];

// Recent posts array with a unique `id` for each post
const recentPosts = [
    { id: 1, title: "‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶ï‡¶®‡¶ü‡ßá‡¶®‡ßç‡¶ü ‡¶ï‡¶§ ‡¶™‡ßç‡¶∞‡¶ï‡¶æ‡¶∞ ‡¶ì ‡¶ï‡¶ø ‡¶ï‡¶ø?", to: "/ContentBlog" },
    { id: 2, title: "Content Marketing ‡¶è‡¶∞ Strategy ‡¶ï‡¶Ø‡¶º‡¶ü‡¶ø ‡¶ì ‡¶ï‡¶ø ‡¶ï‡¶ø?", to: "/ContentMarketing" },
    { id: 3, title: "‡¶è‡¶∏‡¶á‡¶ì ‡¶ï‡¶ø? SEO ‡¶ï‡ßá‡¶® ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º?", to: "/SeoBolog" },
    { id: 4, title: "‡¶´‡ßç‡¶∞‡¶ø‡¶≤‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶∏‡¶ø‡¶Ç ‡¶ï‡ßã‡¶® ‡¶ï‡¶æ‡¶ú‡ßá‡¶∞ ‡¶ö‡¶æ‡¶π‡¶ø‡¶¶‡¶æ ‡¶¨‡ßá‡¶∂‡¶ø?", to: "/‡¶´‡ßç‡¶∞‡¶ø‡¶≤‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶∏‡¶ø‡¶Ç" },
    { id: 5, title: "‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶´‡ßç‡¶∞‡¶ø‡¶≤‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶∏‡¶ø‡¶Ç ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá ‡¶∂‡¶ø‡¶ñ‡¶¨‡ßã?", to: "/‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤‡¶¶‡¶ø‡¶Ø‡¶º‡ßá‡¶´‡ßç‡¶∞‡¶ø‡¶≤‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶∏‡¶ø‡¶ÇBolog" },
];

type FormEvent = React.FormEvent<HTMLFormElement>;

function Sidebar() {
    const [query, setQuery] = React.useState("");

    const handleSearch = (e: FormEvent) => {
        e.preventDefault();
        if (!query.trim()) {
            console.error("Please enter a search term");
            return;
        }
        window.open(`https://www.google.com/search?q=${encodeURIComponent(query)}`, "_blank");
    };

    return (
        <aside className="w-full md:w-80 lg:w-96 p-4 rounded-lg dark:bg-gray-800 flex-shrink-0">

            {/* Search */}
            <div className="mb-6">
                <form onSubmit={handleSearch} className="flex flex-col sm:flex-row gap-2 w-full">
                    <input
                        type="search"
                        id="query"
                        name="q"
                        placeholder="Search..."
                        aria-label="Search this site"
                        value={query}
                        onChange={(e) => setQuery(e.target.value)}
                        className="flex-1 p-2 rounded-lg border border-gray-300 dark:border-gray-700 dark:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-orange-400 dark:text-white"
                    />
                    <button
                        type="submit"
                        className="px-4 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-500 transition-colors"
                    >
                        üîç
                    </button>
                </form>
            </div>

            {/* Categories */}
            <div className="mb-6">
                <h2 className="text-lg font-semibold mb-3">‡¶™‡ßã‡¶∏‡ßç‡¶ü ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó‡¶∏‡¶Æ‡ßÇ‡¶π</h2>
                <ul className="flex flex-col gap-2">
                    {categories.map((cat) => (
                        <li
                            key={cat.to} // Unique key
                            className="flex justify-between p-1 rounded-md cursor-pointer transition-colors"
                        >
                            <Link
                                to={cat.to}
                                className="flex justify-between w-full p-1 rounded-md hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors"
                            >
                                <span>{cat.name}</span>
                                <span className="text-gray-500 dark:text-gray-400">({cat.count})</span>
                            </Link>
                        </li>
                    ))}
                </ul>
            </div>

            {/* Recent Posts */}
            <div>
                <h2 className="text-lg font-semibold mb-3">‡¶∏‡¶æ‡¶Æ‡ßç‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ï ‡¶™‡ßã‡¶∏‡ßç‡¶ü‡¶∏‡¶Æ‡ßÇ‡¶π</h2>
                <ul className="flex flex-col gap-2">
                    {recentPosts.map((post) => (
                        <li key={post.id} className="p-2"> {/* Unique key by post.id */}
                            <Link
                                to={post.to}
                                className="hover:text-orange-600 hover:underline block transition-colors truncate"
                            >
                                {post.title}
                            </Link>
                        </li>
                    ))}
                </ul>
            </div>

        </aside>
    );
}

export default Sidebar;


